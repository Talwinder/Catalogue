ò
JC:\Micro Services\Catalogue\src\Basket.API\Controllers\BasketController.cs
	namespace

 	
Basket


 
.

 
API

 
.

 
Controllers

  
{ 
[ 
Route 

(
 
$str  
)  !
]! "
[ 
ApiController 
] 
public 

class 
BasketController !
:" #
ControllerBase$ 2
{ 
private 
readonly 
IBasketRepository *
_repository+ 6
;6 7
private 
readonly 
IMapper  
_mapper! (
;( )
public 
BasketController 
(  
IBasketRepository  1

repository2 <
)< =
{ 	
_repository 
= 

repository $
??% '
throw( -
new. 1!
ArgumentNullException2 G
(G H
nameofH N
(N O

repositoryO Y
)Y Z
)Z [
;[ \
} 	
[ 	
HttpGet	 
] 
[ 	 
ProducesResponseType	 
( 
typeof $
($ %

BasketCart% /
)/ 0
,0 1
(2 3
int3 6
)6 7
HttpStatusCode7 E
.E F
OKF H
)H I
]I J
public 
async 
Task 
< 
ActionResult &
<& '

BasketCart' 1
>1 2
>2 3
	GetBasket4 =
(= >
string> D
userNameE M
)M N
{ 	
var 
basket 
= 
await 
_repository *
.* +
	GetBasket+ 4
(4 5
userName5 =
)= >
;> ?
return   
Ok   
(   
basket   
??   
new    #

BasketCart  $ .
(  . /
userName  / 7
)  7 8
)  8 9
;  9 :
}!! 	
[## 	
HttpPost##	 
]## 
[$$ 	 
ProducesResponseType$$	 
($$ 
typeof$$ $
($$$ %

BasketCart$$% /
)$$/ 0
,$$0 1
($$2 3
int$$3 6
)$$6 7
HttpStatusCode$$7 E
.$$E F
OK$$F H
)$$H I
]$$I J
public%% 
async%% 
Task%% 
<%% 
ActionResult%% &
<%%& '

BasketCart%%' 1
>%%1 2
>%%2 3
UpdateBasket%%4 @
(%%@ A
[%%A B
FromBody%%B J
]%%J K

BasketCart%%L V
basket%%W ]
)%%] ^
{&& 	
return'' 
Ok'' 
('' 
await'' 
_repository'' '
.''' (
UpdateBasket''( 4
(''4 5
basket''5 ;
)''; <
)''< =
;''= >
}(( 	
[** 	

HttpDelete**	 
(** 
$str**  
)**  !
]**! "
[++ 	 
ProducesResponseType++	 
(++ 
typeof++ $
(++$ %
void++% )
)++) *
,++* +
(++, -
int++- 0
)++0 1
HttpStatusCode++1 ?
.++? @
OK++@ B
)++B C
]++C D
public,, 
async,, 
Task,, 
<,, 
IActionResult,, '
>,,' (
DeleteBasket,,) 5
(,,5 6
string,,6 <
userName,,= E
),,E F
{-- 	
return.. 
Ok.. 
(.. 
await.. 
_repository.. '
...' (
DeleteBasket..( 4
(..4 5
userName..5 =
)..= >
)..> ?
;..? @
}// 	
}33 
}44 à
@C:\Micro Services\Catalogue\src\Basket.API\Data\BasketContext.cs
	namespace 	
Basket
 
. 
API 
. 
Data 
{		 
public

 

class

 
BasketContext

 
:

  
IBasketContext

! /
{ 
private 
readonly !
ConnectionMultiplexer .
_redisConnection/ ?
;? @
public 
BasketContext 
( !
ConnectionMultiplexer 2
redisConnection3 B
)B C
{ 	
_redisConnection 
= 
redisConnection .
;. /
Redis 
= 
redisConnection #
.# $
GetDatabase$ /
(/ 0
)0 1
;1 2
} 	
public 
	IDatabase 
Redis 
{  
get! $
;$ %
}& '
} 
} Æ
LC:\Micro Services\Catalogue\src\Basket.API\Data\Interfaces\IBasketContext.cs
	namespace 	
Basket
 
. 
API 
. 
Data 
. 

Interfaces $
{ 
public 

	interface 
IBasketContext #
{		 
	IDatabase

 
Redis

 
{

 
get

 
;

 
}

  
} 
} à
AC:\Micro Services\Catalogue\src\Basket.API\Entities\BasketCart.cs
	namespace 	
Basket
 
. 
API 
. 
Entities 
{ 
public 

class 

BasketCart 
{ 
public 
string 
UserName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
List 
< 
BasketCartItem "
>" #
Items$ )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
=8 9
new: =
List> B
<B C
BasketCartItemC Q
>Q R
(R S
)S T
;T U
public

 

BasketCart

 
(

 
)

 
{ 	
} 	
public 

BasketCart 
( 
string  
userName! )
)) *
{ 	
UserName 
= 
userName 
;  
} 	
public 
decimal 

TotalPrice !
{ 	
get 
{ 
decimal 

totalprice "
=# $
$num% &
;& '
foreach 
( 
var 
item !
in" $
Items% *
)* +
{ 

totalprice 
+= !
item" &
.& '
Price' ,
*- .
item/ 3
.3 4
Quantity4 <
;< =
} 
return 

totalprice !
;! "
} 
} 	
} 
}   ¸
EC:\Micro Services\Catalogue\src\Basket.API\Entities\BasketCartItem.cs
	namespace 	
Basket
 
. 
API 
. 
Entities 
{ 
public 

class 
BasketCartItem 
{		 
public

 
int

 
Quantity

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 
string 
Color 
{ 
get !
;! "
set# &
;& '
}( )
public 
decimal 
Price 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
	ProductId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
ProductName !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} ¿
EC:\Micro Services\Catalogue\src\Basket.API\Entities\BasketCheckout.cs
	namespace 	
Basket
 
. 
API 
. 
Entities 
{ 
public 

class 
BasketCheckout 
{		 
public

 
string

 
UserName

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
public 
decimal 

TotalPrice !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
	FirstName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
LastName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
AddressLine !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Country 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
State 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
ZipCode 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
CardName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 

CardNumber  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 

Expiration  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
CVV 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
PaymentMethod  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} ©

5C:\Micro Services\Catalogue\src\Basket.API\Program.cs
	namespace

 	
Basket


 
.

 
API

 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} ë
KC:\Micro Services\Catalogue\src\Basket.API\Repositories\BasketRepository.cs
	namespace

 	
Basket


 
.

 
API

 
.

 
Repositories

 !
{ 
public 

class 
BasketRepository !
:" #
IBasketRepository$ 5
{ 
private 
readonly 
IBasketContext '
_context( 0
;0 1
public 
BasketRepository 
(  
IBasketContext  .
context/ 6
)6 7
{ 	
_context 
= 
context 
?? !
throw" '
new( +!
ArgumentNullException, A
(A B
nameofB H
(H I
contextI P
)P Q
)Q R
;R S
} 	
public 
async 
Task 
< 

BasketCart $
>$ %
	GetBasket& /
(/ 0
string0 6
userName7 ?
)? @
{ 	
var 
basket 
= 
await 
_context '
.  !
Redis! &
.  !
StringGetAsync! /
(/ 0
userName0 8
)8 9
;9 :
if 
( 
basket 
. 
IsNullOrEmpty $
)$ %
{ 
return 
null 
; 
} 
return   
JsonConvert   
.   
DeserializeObject   0
<  0 1

BasketCart  1 ;
>  ; <
(  < =
basket  = C
)  C D
;  D E
}!! 	
public## 
async## 
Task## 
<## 

BasketCart## $
>##$ %
UpdateBasket##& 2
(##2 3

BasketCart##3 =
basket##> D
)##D E
{$$ 	
var%% 
updated%% 
=%% 
await%% 
_context%%  (
.&&  !
Redis&&! &
.''  !
StringSetAsync''! /
(''/ 0
basket''0 6
.''6 7
UserName''7 ?
,''? @
JsonConvert''A L
.''L M
SerializeObject''M \
(''\ ]
basket''] c
)''c d
)''d e
;''e f
if)) 
()) 
!)) 
updated)) 
))) 
{** 
return++ 
null++ 
;++ 
},, 
return.. 
await.. 
	GetBasket.. "
(.." #
basket..# )
...) *
UserName..* 2
)..2 3
;..3 4
}// 	
public11 
async11 
Task11 
<11 
bool11 
>11 
DeleteBasket11  ,
(11, -
string11- 3
userName114 <
)11< =
{22 	
return33 
await33 
_context33 !
.44 
Redis44 "
.55 
KeyDeleteAsync55 +
(55+ ,
userName55, 4
)554 5
;555 6
}66 	
}77 
}88 
WC:\Micro Services\Catalogue\src\Basket.API\Repositories\Interfaces\IBasketRepository.cs
	namespace 	
Basket
 
. 
API 
. 
Repositories !
.! "

Interfaces" ,
{ 
public		 

	interface		 
IBasketRepository		 &
{

 
Task 
< 

BasketCart 
> 
	GetBasket "
(" #
string# )
userName* 2
)2 3
;3 4
Task 
< 

BasketCart 
> 
UpdateBasket %
(% &

BasketCart& 0
basket1 7
)7 8
;8 9
Task 
< 
bool 
> 
DeleteBasket 
(  
string  &
userName' /
)/ 0
;0 1
} 
} ¿ 
5C:\Micro Services\Catalogue\src\Basket.API\Startup.cs
	namespace 	
Basket
 
. 
API 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public   
void   
ConfigureServices   %
(  % &
IServiceCollection  & 8
services  9 A
)  A B
{!! 	
services"" 
."" 
AddControllers"" #
(""# $
)""$ %
;""% &
services## 
.## 
AddSingleton## !
<##! "!
ConnectionMultiplexer##" 7
>##7 8
(##8 9
sp##9 ;
=>##< >
{$$ 
var%% 
configuration%% !
=%%" # 
ConfigurationOptions%%$ 8
.%%8 9
Parse%%9 >
(%%> ?
Configuration%%? L
.%%L M
GetConnectionString%%M `
(%%` a
$str%%a h
)%%h i
,%%i j
true%%k o
)%%o p
;%%p q
return&& !
ConnectionMultiplexer&& ,
.&&, -
Connect&&- 4
(&&4 5
configuration&&5 B
)&&B C
;&&C D
}'' 
)(( 
;(( 
services** 
.** 
AddTransient** !
<**! "
IBasketContext**" 0
,**0 1
BasketContext**2 ?
>**? @
(**@ A
)**A B
;**B C
services++ 
.++ 
AddTransient++ !
<++! "
IBasketRepository++" 3
,++3 4
BasketRepository++5 E
>++E F
(++F G
)++G H
;++H I
services-- 
.-- 
AddSwaggerGen-- "
(--" #
c--# $
=>--% '
{.. 
c// 
.// 

SwaggerDoc// 
(// 
$str// !
,//! "
new//# &
	Microsoft//' 0
.//0 1
OpenApi//1 8
.//8 9
Models//9 ?
.//? @
OpenApiInfo//@ K
{//K L
Title//M R
=//S T
$str//U a
,//a b
Version//c j
=//k l
$str//m q
}//r s
)//s t
;//t u
}00 
)00 
;00 
}11 	
public44 
void44 
	Configure44 
(44 
IApplicationBuilder44 1
app442 5
,445 6
IWebHostEnvironment447 J
env44K N
)44N O
{55 	
if66 
(66 
env66 
.66 
IsDevelopment66 !
(66! "
)66" #
)66# $
{77 
app88 
.88 %
UseDeveloperExceptionPage88 -
(88- .
)88. /
;88/ 0
}99 
app;; 
.;; 
UseHttpsRedirection;; #
(;;# $
);;$ %
;;;% &
app== 
.== 

UseRouting== 
(== 
)== 
;== 
app?? 
.?? 
UseAuthorization??  
(??  !
)??! "
;??" #
appAA 
.AA 
UseEndpointsAA 
(AA 
	endpointsAA &
=>AA' )
{BB 
	endpointsCC 
.CC 
MapControllersCC (
(CC( )
)CC) *
;CC* +
}DD 
)DD 
;DD 
appFF 
.FF 

UseSwaggerFF 
(FF 
)FF 
;FF 
appGG 
.GG 
UseSwaggerUIGG 
(GG 
cGG 
=>GG !
cHH 
.HH 
SwaggerEndpointHH 
(HH  
$strHH  :
,HH: ;
$strHH< K
)HHK L
)II 
;II 
}JJ 	
}KK 
}LL Ý
=C:\Micro Services\Catalogue\src\Basket.API\WeatherForecast.cs
	namespace 	
Basket
 
. 
API 
{ 
public 

class 
WeatherForecast  
{ 
public 
DateTime 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
int		 
TemperatureC		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public 
int 
TemperatureF 
=>  "
$num# %
+& '
(( )
int) ,
), -
(- .
TemperatureC. :
/; <
$num= C
)C D
;D E
public 
string 
Summary 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} 